{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/hoangnam/Desktop/chat/chat/client/screens/SignUp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport { Container, Form, Item, Input, Label } from 'native-base';\nimport SERVER from \"../utils/Server\";\nimport BlankValidate from \"../utils/BlankValidate\";\nimport image from \"../assets/backgroundtest.jpg\";\nimport { AntDesign } from '@expo/vector-icons';\nexport default function SignUp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setIsLoading = _useState10[1];\n\n  function postData() {\n    var url,\n        data,\n        response,\n        _args = arguments;\n    return _regeneratorRuntime.async(function postData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = _args.length > 0 && _args[0] !== undefined ? _args[0] : '';\n            data = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(url, {\n              method: 'POST',\n              mode: 'cors',\n              cache: 'no-cache',\n              credentials: 'same-origin',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              redirect: 'follow',\n              referrerPolicy: 'no-referrer',\n              body: JSON.stringify(data)\n            }));\n\n          case 4:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.json());\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var signUp = function signUp() {\n    if (BlankValidate(account) || BlankValidate(password)) {\n      Alert.alert('Account is must not white space');\n      return;\n    }\n\n    if (password === confirmPassword) {\n      if (account && password && name) {\n        setIsLoading(true);\n        postData(SERVER + \"signup\", {\n          account: account,\n          name: name,\n          password: password\n        }).then(function (data) {\n          setIsLoading(false);\n\n          if (data.status === 'fail') {\n            Alert.alert('Account is used . Please create another !');\n          } else {\n            Alert.alert('Create account is successfully !');\n            navigation.navigate('SignIn');\n          }\n        });\n      } else {\n        Alert.alert('Field is not empty');\n      }\n    } else {\n      Alert.alert('Password is not match');\n    }\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(ImageBackground, {\n    source: image,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, React.createElement(Spinner, {\n    visible: isLoading,\n    textContent: 'Loading...',\n    textStyle: {\n      color: '#FFF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate('SignIn');\n    },\n    style: styles.signin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'red',\n      marginLeft: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, \"Sign in \")), React.createElement(Form, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, React.createElement(Label, {\n    style: _objectSpread(_objectSpread({}, styles.label), {}, {\n      fontSize: 30\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, \"Sign up\")), React.createElement(Item, {\n    floatingLabel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, React.createElement(Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }, \"Username\"), React.createElement(Input, {\n    onChangeText: function onChangeText(e) {\n      setAccount(e);\n    },\n    style: {\n      marginTop: 10,\n      color: 'cyan'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  })), React.createElement(Item, {\n    floatingLabel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, React.createElement(Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, \"Full name\"), React.createElement(Input, {\n    onChangeText: function onChangeText(e) {\n      setName(e);\n    },\n    style: {\n      marginTop: 10,\n      color: 'cyan'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  })), React.createElement(Item, {\n    floatingLabel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, React.createElement(Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, \"Password\"), React.createElement(Input, {\n    onChangeText: function onChangeText(e) {\n      setPassword(e);\n    },\n    secureTextEntry: true,\n    style: {\n      marginTop: 10,\n      color: 'cyan'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  })), React.createElement(Item, {\n    floatingLabel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, React.createElement(Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }, \"Confirm password\"), React.createElement(Input, {\n    onChangeText: function onChangeText(e) {\n      setConfirmPassword(e);\n    },\n    secureTextEntry: true,\n    style: {\n      marginTop: 10,\n      color: 'cyan'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }))), React.createElement(View, {\n    style: styles.buttonRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: signUp,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, React.createElement(AntDesign, {\n    name: \"check\",\n    size: 24,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  })))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    resizeMode: 'cover',\n    flexDirection: 'column',\n    justifyContent: 'space-around'\n  },\n  form: {\n    marginLeft: 20,\n    marginRight: 30,\n    marginTop: 70\n  },\n  label: {\n    color: 'white'\n  },\n  buttonRight: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row'\n  },\n  button: {\n    backgroundColor: 'cyan',\n    borderRadius: 100,\n    width: 70,\n    height: 70,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 12\n    },\n    shadowOpacity: 0.58,\n    shadowRadius: 16.00,\n    elevation: 24\n  },\n  signin: {\n    backgroundColor: 'white',\n    borderRadius: 20,\n    position: 'absolute',\n    width: 200,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    right: -100,\n    marginRight: 20,\n    padding: 12\n  }\n});","map":{"version":3,"sources":["/Users/hoangnam/Desktop/chat/chat/client/screens/SignUp.js"],"names":["React","useState","Spinner","Container","Form","Item","Input","Label","SERVER","BlankValidate","image","AntDesign","SignUp","navigation","account","setAccount","name","setName","password","setPassword","confirmPassword","setConfirmPassword","isLoading","setIsLoading","postData","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","signUp","Alert","alert","then","status","navigate","Keyboard","dismiss","flex","Platform","OS","styles","container","color","signin","marginLeft","form","flexDirection","justifyContent","marginBottom","label","fontSize","e","marginTop","buttonRight","button","StyleSheet","create","resizeMode","marginRight","backgroundColor","borderRadius","width","height","alignItems","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","position","right","padding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, TouchableOpacity, Alert, ImageBackground, StyleSheet, KeyboardAvoidingView, TouchableWithoutFeedback, Keyboard } from 'react-native'\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport { Container, Form, Item, Input, Label } from 'native-base';\r\nimport SERVER from '../utils/Server';\r\nimport BlankValidate from '../utils/BlankValidate'\r\nimport image from \"../assets/backgroundtest.jpg\";\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\nexport default function SignUp({ navigation }) {\r\n    const [account, setAccount] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    async function postData(url = '', data = {}) {\r\n\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(data)\r\n        });\r\n        return response.json();\r\n    }\r\n\r\n    const signUp = () => {\r\n        if (BlankValidate(account) || BlankValidate(password)) {\r\n            Alert.alert('Account is must not white space')\r\n            return;\r\n        }\r\n        if (password === confirmPassword) {\r\n            if (account && password && name) {\r\n                setIsLoading(true)\r\n\r\n                postData(`${SERVER}signup`, { account, name, password })\r\n                    .then(data => {\r\n                        setIsLoading(false)\r\n                        if (data.status === 'fail') {\r\n                            Alert.alert('Account is used . Please create another !')\r\n                        } else {\r\n                            Alert.alert('Create account is successfully !')\r\n                            navigation.navigate('SignIn')\r\n                        }\r\n                    });\r\n            } else {\r\n                Alert.alert('Field is not empty')\r\n            }\r\n        } else {\r\n            Alert.alert('Password is not match')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TouchableWithoutFeedback\r\n            onPress={() => {\r\n                Keyboard.dismiss()\r\n            }}\r\n        >\r\n            <Container>\r\n\r\n                <ImageBackground\r\n                    source={image}\r\n                    style={{ flex: 1 }}\r\n                >\r\n                    <KeyboardAvoidingView\r\n                        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n                        style={styles.container}\r\n\r\n                    >\r\n\r\n                        <Spinner\r\n                            visible={isLoading}\r\n                            //Text with the Spinner\r\n                            textContent={'Loading...'}\r\n                            //Text style of the Spinner Text\r\n                            textStyle={{ color: '#FFF' }}\r\n                        />\r\n                        <TouchableOpacity\r\n                            onPress={() => {\r\n                                navigation.navigate('SignIn')\r\n                            }}\r\n                            style={styles.signin}>\r\n                            <Text style={{ color: 'red', marginLeft: 15 }}>Sign in </Text>\r\n                        </TouchableOpacity>\r\n                        <Form style={styles.form}>\r\n                            <View style={{ flexDirection: 'row', justifyContent: 'flex-end', marginBottom: 20 }}>\r\n                                <Label style={{ ...styles.label, fontSize: 30 }}>Sign up</Label>\r\n                            </View>\r\n                            <Item floatingLabel>\r\n                                <Label style={styles.label}>Username</Label>\r\n                                <Input onChangeText={(e) => {\r\n                                    setAccount(e)\r\n                                }} style={{ marginTop: 10, color: 'cyan' }} />\r\n                            </Item>\r\n                            <Item floatingLabel>\r\n                                <Label style={styles.label}>Full name</Label>\r\n                                <Input onChangeText={(e) => {\r\n                                    setName(e)\r\n                                }} style={{ marginTop: 10, color: 'cyan' }} />\r\n                            </Item>\r\n                            <Item floatingLabel>\r\n                                <Label style={styles.label}>Password</Label>\r\n                                <Input onChangeText={(e) => {\r\n                                    setPassword(e)\r\n                                }} secureTextEntry={true} style={{ marginTop: 10, color: 'cyan' }} />\r\n                            </Item>\r\n                            <Item floatingLabel>\r\n                                <Label style={styles.label}>Confirm password</Label>\r\n                                <Input onChangeText={(e) => {\r\n                                    setConfirmPassword(e)\r\n                                }} secureTextEntry={true} style={{ marginTop: 10, color: 'cyan' }} />\r\n                            </Item>\r\n\r\n                        </Form>\r\n                        <View style={styles.buttonRight}>\r\n                            <TouchableOpacity onPress={signUp} style={styles.button}>\r\n                                <AntDesign name=\"check\" size={24} color=\"black\" />\r\n                            </TouchableOpacity>\r\n                        </View>\r\n\r\n\r\n                    </KeyboardAvoidingView>\r\n\r\n                </ImageBackground>\r\n\r\n            </Container>\r\n        </TouchableWithoutFeedback>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        resizeMode: 'cover',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around'\r\n    },\r\n    form: {\r\n        marginLeft: 20,\r\n        marginRight: 30,\r\n        marginTop: 70\r\n    },\r\n    label: {\r\n        color: 'white'\r\n    },\r\n    buttonRight: {\r\n        justifyContent: 'flex-end',\r\n        flexDirection: 'row',\r\n    },\r\n    button: {\r\n        backgroundColor: 'cyan',\r\n        borderRadius: 100,\r\n        width: 70,\r\n        height: 70,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginRight: 20,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 12,\r\n        },\r\n        shadowOpacity: 0.58,\r\n        shadowRadius: 16.00,\r\n\r\n        elevation: 24,\r\n\r\n    },\r\n    signin: {\r\n        backgroundColor: 'white',\r\n        borderRadius: 20,\r\n        position: 'absolute',\r\n        width: 200,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        right: -100,\r\n        marginRight: 20,\r\n        padding: 12\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}