{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ngong\\\\Desktop\\\\Nhom4.thienlpph09538.Assignment\\\\chat-master\\\\client\\\\screens\\\\SignIn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport { Container, Form, Item, Input, Label } from 'native-base';\nimport { AntDesign } from '@expo/vector-icons';\nimport image from \"../assets/backgroundtest.jpg\";\nimport SERVER from \"../utils/Server\";\nimport BlankValidate from \"../utils/BlankValidate\";\nexport default function SignIn(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  function postData() {\n    var url,\n        data,\n        response,\n        _args = arguments;\n    return _regeneratorRuntime.async(function postData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = _args.length > 0 && _args[0] !== undefined ? _args[0] : '';\n            data = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(url, {\n              method: 'POST',\n              mode: 'cors',\n              cache: 'no-cache',\n              credentials: 'same-origin',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              redirect: 'follow',\n              referrerPolicy: 'no-referrer',\n              body: JSON.stringify(data)\n            }));\n\n          case 4:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.json());\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var signIn = function signIn() {\n    if (BlankValidate(account) || BlankValidate(password)) {\n      Alert.alert('Account is must not white space');\n      return;\n    }\n\n    if (account && password) {\n      setIsLoading(true);\n      postData(SERVER + \"signin\", {\n        account: account,\n        password: password\n      }).then(function (data) {\n        setIsLoading(false);\n\n        if (data.status === 'fail') {\n          Alert.alert('This account is Invalid');\n          return;\n        } else {\n          navigation.navigate('JoinScreen', data[0]);\n        }\n      });\n    } else {\n      Alert.alert('Field is not empty');\n    }\n  };\n\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    source: image,\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Spinner, {\n    visible: isLoading,\n    textContent: 'Loading...',\n    textStyle: {\n      color: '#FFF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), React.createElement(Form, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, React.createElement(Label, {\n    style: _objectSpread(_objectSpread({}, styles.label), {}, {\n      fontSize: 30\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Login\"), React.createElement(Item, {\n    floatingLabel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, React.createElement(Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Username\"), React.createElement(Input, {\n    onChangeText: function onChangeText(e) {\n      setAccount(e);\n    },\n    style: {\n      marginTop: 10,\n      color: 'cyan'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  })), React.createElement(Item, {\n    floatingLabel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, React.createElement(Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Password\"), React.createElement(Input, {\n    onChangeText: function onChangeText(e) {\n      setPassword(e);\n    },\n    secureTextEntry: true,\n    style: {\n      marginTop: 10,\n      color: 'cyan'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate('SignUp');\n    },\n    style: styles.signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'red',\n      marginRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \"Sign up \"))), React.createElement(View, {\n    style: styles.buttonRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: signIn,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, React.createElement(AntDesign, {\n    name: \"arrowright\",\n    size: 24,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#418a8e',\n    justifyContent: 'space-around',\n    resizeMode: \"cover\"\n  },\n  form: {\n    marginLeft: 20,\n    marginRight: 30,\n    marginTop: 70\n  },\n  label: {\n    color: 'white'\n  },\n  button: {\n    backgroundColor: 'cyan',\n    borderRadius: 100,\n    width: 70,\n    height: 70,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 12\n    },\n    shadowOpacity: 0.58,\n    shadowRadius: 16.00,\n    elevation: 24\n  },\n  buttonRight: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row'\n  },\n  signup: {\n    backgroundColor: 'white',\n    borderRadius: 20,\n    position: 'absolute',\n    top: 250,\n    width: 200,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    left: -100,\n    marginRight: 20,\n    padding: 12\n  }\n});","map":{"version":3,"sources":["C:/Users/ngong/Desktop/Nhom4.thienlpph09538.Assignment/chat-master/client/screens/SignIn.js"],"names":["React","useState","Spinner","Container","Form","Item","Input","Label","AntDesign","image","SERVER","BlankValidate","SignIn","navigation","account","setAccount","password","setPassword","isLoading","setIsLoading","postData","url","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","signIn","Alert","alert","then","status","navigate","styles","container","color","form","label","fontSize","e","marginTop","signup","marginRight","buttonRight","button","StyleSheet","create","flex","backgroundColor","justifyContent","resizeMode","marginLeft","borderRadius","width","height","alignItems","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","flexDirection","position","top","left","padding"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,OAAOC,OAAP,MAAoB,sCAApB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,KAAvC,QAAoD,aAApD;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,aAAP;AACA,eAAe,SAASC,MAAT,OAAgC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBAEbZ,QAAQ,CAAC,EAAD,CAFK;AAAA;AAAA,MAEpCa,OAFoC;AAAA,MAE3BC,UAF2B;;AAAA,mBAGXd,QAAQ,CAAC,EAAD,CAHG;AAAA;AAAA,MAGpCe,QAHoC;AAAA,MAG1BC,WAH0B;;AAAA,mBAIThB,QAAQ,CAAC,KAAD,CAJC;AAAA;AAAA,MAIpCiB,SAJoC;AAAA,MAIzBC,YAJyB;;AAK3C,WAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwBC,YAAAA,GAAxB,2DAA8B,EAA9B;AAAkCC,YAAAA,IAAlC,2DAAyC,EAAzC;AAAA;AAAA,6CAC2BC,KAAK,CAACF,GAAD,EAAM;AAC9BG,cAAAA,MAAM,EAAE,MADsB;AAE9BC,cAAAA,IAAI,EAAE,MAFwB;AAG9BC,cAAAA,KAAK,EAAE,UAHuB;AAI9BC,cAAAA,WAAW,EAAE,aAJiB;AAK9BC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eALqB;AAS9BC,cAAAA,QAAQ,EAAE,QAToB;AAU9BC,cAAAA,cAAc,EAAE,aAVc;AAW9BC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf;AAXwB,aAAN,CADhC;;AAAA;AACUY,YAAAA,QADV;AAAA,6CAcWA,QAAQ,CAACC,IAAT,EAdX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAEjB,QAAIzB,aAAa,CAACG,OAAD,CAAb,IAA0BH,aAAa,CAACK,QAAD,CAA3C,EAAuD;AACnDqB,MAAAA,KAAK,CAACC,KAAN,CAAY,iCAAZ;AACA;AACH;;AACD,QAAIxB,OAAO,IAAIE,QAAf,EAAyB;AACrBG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAC,MAAAA,QAAQ,CAAIV,MAAJ,aAAoB;AAAEI,QAAAA,OAAO,EAAPA,OAAF;AAAWE,QAAAA,QAAQ,EAARA;AAAX,OAApB,CAAR,CACKuB,IADL,CACU,UAAAjB,IAAI,EAAI;AACVH,QAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,YAAIG,IAAI,CAACkB,MAAL,KAAgB,MAApB,EAA4B;AACxBH,UAAAA,KAAK,CAACC,KAAN,CAAY,yBAAZ;AACA;AACH,SAHD,MAIK;AACDzB,UAAAA,UAAU,CAAC4B,QAAX,CAAoB,YAApB,EAAkCnB,IAAI,CAAC,CAAD,CAAtC;AACH;AACJ,OAVL;AAWH,KAdD,MAcO;AACHe,MAAAA,KAAK,CAACC,KAAN,CAAY,oBAAZ;AACH;AACJ,GAvBD;;AAwBA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AACI,IAAA,MAAM,EAAE7B,KADZ;AAEI,IAAA,KAAK,EAAEiC,MAAM,CAACC,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,OAAD;AACI,IAAA,OAAO,EAAEzB,SADb;AAEI,IAAA,WAAW,EAAE,YAFjB;AAGI,IAAA,SAAS,EAAE;AAAE0B,MAAAA,KAAK,EAAE;AAAT,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,kCAAOH,MAAM,CAACI,KAAd;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,aAAa,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEL,MAAM,CAACI,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAE,sBAACE,CAAD,EAAO;AAAEjC,MAAAA,UAAU,CAACiC,CAAD,CAAV;AAAe,KAA7C;AAA+C,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBL,MAAAA,KAAK,EAAE;AAAxB,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,EAMI,oBAAC,IAAD;AAAM,IAAA,aAAa,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,MAAM,CAACI,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAE,sBAACE,CAAD,EAAO;AAAE/B,MAAAA,WAAW,CAAC+B,CAAD,CAAX;AAAgB,KAA9C;AAAgD,IAAA,eAAe,EAAE,IAAjE;AAAuE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBL,MAAAA,KAAK,EAAE;AAAxB,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANJ,EAWI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAE,mBAAM;AAAE/B,MAAAA,UAAU,CAAC4B,QAAX,CAAoB,QAApB;AAA+B,KADpD;AAEI,IAAA,KAAK,EAAEC,MAAM,CAACQ,MAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEN,MAAAA,KAAK,EAAE,KAAT;AAAgBO,MAAAA,WAAW,EAAE;AAA7B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAXJ,CAVJ,EA2BI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEhB,MAA3B;AAAmC,IAAA,KAAK,EAAEM,MAAM,CAACW,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,YAAhB;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAuC,IAAA,KAAK,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CA3BJ,CADJ,CADJ;AAqCH;AAED,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC7BZ,EAAAA,SAAS,EAAE;AACPa,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,SAFV;AAGPC,IAAAA,cAAc,EAAE,cAHT;AAIPC,IAAAA,UAAU,EAAE;AAJL,GADkB;AAO7Bd,EAAAA,IAAI,EAAE;AACFe,IAAAA,UAAU,EAAE,EADV;AAEFT,IAAAA,WAAW,EAAE,EAFX;AAGFF,IAAAA,SAAS,EAAE;AAHT,GAPuB;AAY7BH,EAAAA,KAAK,EAAE;AACHF,IAAAA,KAAK,EAAE;AADJ,GAZsB;AAe7BS,EAAAA,MAAM,EAAE;AACJI,IAAAA,eAAe,EAAE,MADb;AAEJI,IAAAA,YAAY,EAAE,GAFV;AAGJC,IAAAA,KAAK,EAAE,EAHH;AAIJC,IAAAA,MAAM,EAAE,EAJJ;AAKJC,IAAAA,UAAU,EAAE,QALR;AAMJN,IAAAA,cAAc,EAAE,QANZ;AAOJP,IAAAA,WAAW,EAAE,EAPT;AAQJc,IAAAA,WAAW,EAAE,MART;AASJC,IAAAA,YAAY,EAAE;AACVJ,MAAAA,KAAK,EAAE,CADG;AAEVC,MAAAA,MAAM,EAAE;AAFE,KATV;AAaJI,IAAAA,aAAa,EAAE,IAbX;AAcJC,IAAAA,YAAY,EAAE,KAdV;AAgBJC,IAAAA,SAAS,EAAE;AAhBP,GAfqB;AAkC7BjB,EAAAA,WAAW,EAAE;AACTM,IAAAA,cAAc,EAAE,UADP;AAETY,IAAAA,aAAa,EAAE;AAFN,GAlCgB;AAsC7BpB,EAAAA,MAAM,EAAE;AACJO,IAAAA,eAAe,EAAE,OADb;AAEJI,IAAAA,YAAY,EAAE,EAFV;AAGJU,IAAAA,QAAQ,EAAE,UAHN;AAIJC,IAAAA,GAAG,EAAE,GAJD;AAKJV,IAAAA,KAAK,EAAE,GALH;AAMJQ,IAAAA,aAAa,EAAE,KANX;AAOJZ,IAAAA,cAAc,EAAE,UAPZ;AAQJe,IAAAA,IAAI,EAAE,CAAC,GARH;AASJtB,IAAAA,WAAW,EAAE,EATT;AAUJuB,IAAAA,OAAO,EAAE;AAVL;AAtCqB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, TouchableOpacity, Alert, StyleSheet, ImageBackground } from 'react-native'\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport { Container, Form, Item, Input, Label } from 'native-base';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport image from '../assets/backgroundtest.jpg';\r\nimport SERVER from '../utils/Server';\r\nimport BlankValidate from '../utils/BlankValidate'\r\nexport default function SignIn({ navigation }) {\r\n\r\n    const [account, setAccount] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    async function postData(url = '', data = {}) {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(data)\r\n        });\r\n        return response.json();\r\n    }\r\n    const signIn = () => {\r\n\r\n        if (BlankValidate(account) || BlankValidate(password)) {\r\n            Alert.alert('Account is must not white space')\r\n            return;\r\n        }\r\n        if (account && password) {\r\n            setIsLoading(true)\r\n\r\n            postData(`${SERVER}signin`, { account, password })\r\n                .then(data => {\r\n                    setIsLoading(false)\r\n                    if (data.status === 'fail') {\r\n                        Alert.alert('This account is Invalid')\r\n                        return\r\n                    }\r\n                    else {\r\n                        navigation.navigate('JoinScreen', data[0])\r\n                    }\r\n                });\r\n        } else {\r\n            Alert.alert('Field is not empty')\r\n        }\r\n    }\r\n    return (\r\n        <Container>\r\n            <ImageBackground\r\n                source={image}\r\n                style={styles.container}\r\n            >\r\n                <Spinner\r\n                    visible={isLoading}\r\n                    textContent={'Loading...'}\r\n                    textStyle={{ color: '#FFF' }}\r\n                />\r\n\r\n                <Form style={styles.form}>\r\n                    <Label style={{ ...styles.label, fontSize: 30 }}>Login</Label>\r\n                    <Item floatingLabel>\r\n                        <Label style={styles.label}>Username</Label>\r\n                        <Input onChangeText={(e) => { setAccount(e) }} style={{ marginTop: 10, color: 'cyan' }} />\r\n                    </Item>\r\n                    <Item floatingLabel >\r\n                        <Label style={styles.label}>Password</Label>\r\n                        <Input onChangeText={(e) => { setPassword(e) }} secureTextEntry={true} style={{ marginTop: 10, color: 'cyan' }} />\r\n                    </Item>\r\n\r\n                    <TouchableOpacity\r\n                        onPress={() => { navigation.navigate('SignUp') }}\r\n                        style={styles.signup} >\r\n                        <Text style={{ color: 'red', marginRight: 15 }}>Sign up </Text>\r\n                    </TouchableOpacity>\r\n                </Form>\r\n                <View style={styles.buttonRight}>\r\n                    <TouchableOpacity onPress={signIn} style={styles.button} >\r\n                        <AntDesign name=\"arrowright\" size={24} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ImageBackground>\r\n        </Container >\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#418a8e',\r\n        justifyContent: 'space-around',\r\n        resizeMode: \"cover\",\r\n    },\r\n    form: {\r\n        marginLeft: 20,\r\n        marginRight: 30,\r\n        marginTop: 70\r\n    },\r\n    label: {\r\n        color: 'white'\r\n    },\r\n    button: {\r\n        backgroundColor: 'cyan',\r\n        borderRadius: 100,\r\n        width: 70,\r\n        height: 70,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginRight: 20,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 12,\r\n        },\r\n        shadowOpacity: 0.58,\r\n        shadowRadius: 16.00,\r\n\r\n        elevation: 24,\r\n\r\n    },\r\n    buttonRight: {\r\n        justifyContent: 'flex-end',\r\n        flexDirection: 'row',\r\n    },\r\n    signup: {\r\n        backgroundColor: 'white',\r\n        borderRadius: 20,\r\n        position: 'absolute',\r\n        top: 250,\r\n        width: 200,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end',\r\n        left: -100,\r\n        marginRight: 20,\r\n        padding: 12\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}