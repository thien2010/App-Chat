{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\man\\\\Desktop\\\\chat-realtime\\\\mobile-client\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport io from 'socket.io-client';\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      messageToSend = _useState2[0],\n      setMessageToSend = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      receiveMessage = _useState4[0],\n      setReceiveMessage = _useState4[1];\n\n  var socket = useRef(null);\n  useEffect(function () {\n    socket.current = io(\"http://192.168.16.104:4001\");\n    socket.current.on(\"message\", function (message) {\n      console.log(message);\n      setReceiveMessage(function (pre) {\n        return [].concat(_toConsumableArray(pre), [message]);\n      });\n    });\n  }, []);\n\n  var sendMessage = function sendMessage() {\n    socket.current.emit(\"message\", messageToSend);\n    setMessageToSend(\"\");\n  };\n\n  var allMessage = receiveMessage.map(function (item, index) {\n    return React.createElement(Text, {\n      keys: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, item);\n  });\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Welcome To Chat App\"), React.createElement(TextInput, {\n    value: messageToSend,\n    placeholder: \"something\",\n    onChangeText: function onChangeText(e) {\n      setMessageToSend(e);\n    },\n    onSubmitEditing: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/man/Desktop/chat-realtime/mobile-client/App.js"],"names":["StatusBar","React","useEffect","useState","useRef","io","App","messageToSend","setMessageToSend","receiveMessage","setReceiveMessage","socket","current","on","message","console","log","pre","sendMessage","emit","allMessage","map","item","index","styles","container","e","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;;;;;;AAEA,OAAOC,EAAP,MAAe,kBAAf;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAAA,kBACcH,QAAQ,CAAC,EAAD,CADtB;AAAA;AAAA,MACrBI,aADqB;AAAA,MACNC,gBADM;;AAAA,mBAEgBL,QAAQ,CAAC,EAAD,CAFxB;AAAA;AAAA,MAErBM,cAFqB;AAAA,MAELC,iBAFK;;AAG5B,MAAMC,MAAM,GAAGP,MAAM,CAAC,IAAD,CAArB;AACAF,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,MAAM,CAACC,OAAP,GAAiBP,EAAE,CAAC,4BAAD,CAAnB;AACAM,IAAAA,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,SAAlB,EAA6B,UAAAC,OAAO,EAAI;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAJ,MAAAA,iBAAiB,CAAC,UAAAO,GAAG;AAAA,4CAAQA,GAAR,IAAaH,OAAb;AAAA,OAAJ,CAAjB;AACD,KAHD;AAID,GANQ,EAMN,EANM,CAAT;;AAOA,MAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBP,IAAAA,MAAM,CAACC,OAAP,CAAeO,IAAf,CAAoB,SAApB,EAA+BZ,aAA/B;AACAC,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAHD;;AAIA,MAAMY,UAAU,GAAGX,cAAc,CAACY,GAAf,CAAmB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACrD,WAAQ,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBD,IAApB,CAAR;AACD,GAFkB,CAAnB;AAIA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAElB,aADT;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,YAAY,EAAE,sBAACmB,CAAD,EAAO;AACnBlB,MAAAA,gBAAgB,CAACkB,CAAD,CAAhB;AACD,KALH;AAME,IAAA,eAAe,EAAER,WANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF;AAgBD;AAED,IAAMM,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { StyleSheet, Text, View, TextInput, ScrollView } from 'react-native';\nimport io from 'socket.io-client'\n\nexport default function App() {\n  const [messageToSend, setMessageToSend] = useState('');\n  const [receiveMessage, setReceiveMessage] = useState([]);\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = io(\"http://192.168.16.104:4001\");\n    socket.current.on(\"message\", message => {\n      console.log(message)\n      setReceiveMessage(pre => [...pre, message])\n    })\n  }, [])\n  const sendMessage = () => {\n    socket.current.emit(\"message\", messageToSend);\n    setMessageToSend(\"\");\n  }\n  const allMessage = receiveMessage.map((item, index) => {\n    return (<Text keys={index}>{item}</Text>)\n  })\n\n  return (\n    <ScrollView>\n      <View style={styles.container}>\n        <Text>Welcome To Chat App</Text>\n        <TextInput\n          value={messageToSend}\n          placeholder='something'\n          onChangeText={(e) => {\n            setMessageToSend(e)\n          }}\n          onSubmitEditing={sendMessage}\n        />\n        <StatusBar style=\"auto\" />\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}