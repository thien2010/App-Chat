{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ngong\\\\Desktop\\\\Nhom4.thienlpph09538.Assignment\\\\chat-master\\\\client\\\\screens\\\\Home.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport io from 'socket.io-client';\nimport { GiftedChat, Send } from 'react-native-gifted-chat';\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport SERVER from \"../utils/Server\";\nimport ToggleSwitch from 'toggle-switch-react-native';\nimport Modal from 'react-native-modal';\nimport * as FileSystem from 'expo-file-system';\nimport * as Permissions from 'expo-permissions';\nimport * as MediaLibrary from 'expo-media-library';\nexport default function Home(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var _route$params = route.params,\n      name = _route$params.name,\n      room = _route$params.room,\n      account = _route$params.account,\n      avatar = _route$params.avatar,\n      time = _route$params.time;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      receiveMessage = _useState2[0],\n      setReceiveMessage = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      toggle = _useState6[0],\n      setToggle = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isModalVisible = _useState8[0],\n      setModalVisible = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showImage = _useState10[0],\n      setShowImage = _useState10[1];\n\n  var socket = useRef(null);\n\n  var saveFile = function saveFile(fileUri) {\n    var _await$Permissions$as, status, asset;\n\n    return _regeneratorRuntime.async(function saveFile$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.MEDIA_LIBRARY));\n\n          case 2:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n\n            if (!(status === \"granted\")) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(MediaLibrary.createAssetAsync(fileUri));\n\n          case 7:\n            asset = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(MediaLibrary.createAlbumAsync(\"Download\", asset));\n\n          case 10:\n            Alert.alert(\"Save Image Successfully\");\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var downloadImage = function downloadImage() {\n    var fileUri = FileSystem.documentDirectory + \"robo.jpg\";\n    FileSystem.downloadAsync(showImage, fileUri).then(function (_ref2) {\n      var uri = _ref2.uri;\n      saveFile(uri);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  useEffect(function () {\n    fetch(\"\" + SERVER + room).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      socket.current = io(\"\" + SERVER);\n      socket.current.emit(\"join\", {\n        name: name,\n        room: room,\n        account: account,\n        avatar: avatar,\n        time: time\n      });\n      socket.current.on(\"message\", function (message) {\n        setReceiveMessage(function (pre) {\n          return GiftedChat.append(pre, message);\n        });\n      });\n      setReceiveMessage(function (pre) {\n        return GiftedChat.append(pre, res);\n      });\n      setIsLoading(false);\n    });\n  }, []);\n  useEffect(function () {\n    navigation.setOptions({\n      title: \"Room: \" + room,\n      headerRight: function headerRight() {\n        return React.createElement(ToggleSwitch, {\n          isOn: toggle,\n          onColor: \"white\",\n          offColor: \"black\",\n          label: \"Switch mode\",\n          labelStyle: {\n            color: \"black\",\n            fontWeight: \"900\"\n          },\n          size: \"medium\",\n          onToggle: function onToggle(isOn) {\n            setToggle(function (toggle) {\n              return !toggle;\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }\n        });\n      }\n    });\n  }, [toggle]);\n\n  var _onSend = function onSend(messageToSend) {\n    socket.current.emit(\"message\", messageToSend[0].text);\n    setReceiveMessage(function (pre) {\n      return GiftedChat.append(pre, messageToSend);\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: toggle ? 'white' : 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(Spinner, {\n    visible: isLoading,\n    textContent: 'Loading...',\n    textStyle: {\n      color: '#FFF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), React.createElement(GiftedChat, {\n    isTyping: true,\n    renderUsernameOnMessage: true,\n    messages: receiveMessage,\n    placeholder: \"Send something\",\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    isAnimated: true,\n    user: {\n      _id: time\n    },\n    onPressAvatar: function onPressAvatar(user) {\n      setShowImage(user.avatar);\n      setModalVisible(true);\n    },\n    scrollToBottom: true,\n    renderSend: function renderSend(props) {\n      return React.createElement(Send, _extends({}, props, {\n        containerStyle: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignSelf: 'center',\n          marginRight: 15\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }), React.createElement(Image, {\n        source: require(\"../assets/send.png\"),\n        style: {\n          width: 27.2,\n          height: 27.2\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), React.createElement(Modal, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    animationIn: \"slideInUp\",\n    coverScreen: true,\n    animationInTiming: 2000,\n    backdropOpacity: 0.5,\n    onBackdropPress: function onBackdropPress() {\n      return setModalVisible(false);\n    },\n    onSwipeComplete: function onSwipeComplete() {\n      return setModalVisible(false);\n    },\n    onBackButtonPress: function onBackButtonPress() {\n      setModalVisible(false);\n    },\n    isVisible: isModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: downloadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: showImage\n    },\n    style: {\n      width: 120,\n      height: 120\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/ngong/Desktop/Nhom4.thienlpph09538.Assignment/chat-master/client/screens/Home.js"],"names":["React","useEffect","useState","useRef","io","GiftedChat","Send","Spinner","SERVER","ToggleSwitch","Modal","FileSystem","Permissions","MediaLibrary","Home","navigation","route","params","name","room","account","avatar","time","receiveMessage","setReceiveMessage","isLoading","setIsLoading","toggle","setToggle","isModalVisible","setModalVisible","showImage","setShowImage","socket","saveFile","fileUri","askAsync","MEDIA_LIBRARY","status","createAssetAsync","asset","createAlbumAsync","Alert","alert","downloadImage","documentDirectory","downloadAsync","then","uri","catch","error","console","fetch","res","json","current","emit","on","message","pre","append","setOptions","title","headerRight","color","fontWeight","isOn","onSend","messageToSend","text","flex","backgroundColor","messages","_id","user","props","justifyContent","alignItems","alignSelf","marginRight","require","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { View, Image, TouchableOpacity, Alert } from 'react-native';\r\nimport io from 'socket.io-client'\r\nimport { GiftedChat, Send } from 'react-native-gifted-chat'\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport SERVER from '../utils/Server';\r\nimport ToggleSwitch from 'toggle-switch-react-native'\r\nimport Modal from 'react-native-modal';\r\n\r\nimport * as FileSystem from 'expo-file-system'\r\nimport * as Permissions from 'expo-permissions';\r\nimport * as MediaLibrary from 'expo-media-library';\r\n\r\nexport default function Home({ navigation, route }) {\r\n    const { name, room, account, avatar, time } = route.params;\r\n    const [receiveMessage, setReceiveMessage] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [toggle, setToggle] = useState(false);\r\n    const [isModalVisible, setModalVisible] = useState(false)\r\n    const [showImage, setShowImage] = useState('')\r\n    const socket = useRef(null);\r\n    const saveFile = async (fileUri) => {\r\n        const { status } = await Permissions.askAsync(Permissions.MEDIA_LIBRARY);\r\n        if (status === \"granted\") {\r\n            const asset = await MediaLibrary.createAssetAsync(fileUri)\r\n            await MediaLibrary.createAlbumAsync(\"Download\", asset)\r\n            Alert.alert(\"Save Image Successfully\")\r\n        }\r\n    }\r\n    const downloadImage = () => {\r\n        let fileUri = FileSystem.documentDirectory + \"robo.jpg\";\r\n        FileSystem.downloadAsync(showImage, fileUri)\r\n            .then(({ uri }) => {\r\n                saveFile(uri);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        fetch(`${SERVER}${room}`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                socket.current = io(`${SERVER}`);\r\n                socket.current.emit(\"join\", { name, room, account, avatar, time })\r\n                socket.current.on(\"message\", message => {\r\n                    setReceiveMessage(pre => GiftedChat.append(pre, message))\r\n                })\r\n                setReceiveMessage(pre => GiftedChat.append(pre, res))\r\n                setIsLoading(false)\r\n\r\n            })\r\n    }, [])\r\n    useEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"Room: \" + room, headerRight: () => (\r\n                <ToggleSwitch\r\n                    isOn={toggle}\r\n                    onColor=\"white\"\r\n                    offColor=\"black\"\r\n                    label=\"Switch mode\"\r\n                    labelStyle={{ color: \"black\", fontWeight: \"900\" }}\r\n                    size=\"medium\"\r\n                    onToggle={isOn => {\r\n                        setToggle(toggle => !toggle)\r\n                    }}\r\n                />\r\n            )\r\n        })\r\n    }, [toggle])\r\n    const onSend = (messageToSend) => {\r\n        socket.current.emit(\"message\", messageToSend[0].text);\r\n        setReceiveMessage(pre => GiftedChat.append(pre, messageToSend))\r\n    }\r\n\r\n    return (\r\n        <View style={{\r\n            flex: 1,\r\n            backgroundColor: toggle ? 'white' : 'black'\r\n        }}>\r\n            <Spinner\r\n                //visibility of Overlay Loading Spinner\r\n                visible={isLoading}\r\n                //Text with the Spinner\r\n                textContent={'Loading...'}\r\n                //Text style of the Spinner Text\r\n                textStyle={{ color: '#FFF' }}\r\n            />\r\n            <GiftedChat\r\n                isTyping={true}\r\n                renderUsernameOnMessage\r\n                messages={receiveMessage}\r\n                placeholder='Send something'\r\n                onSend={messages => onSend(messages)}\r\n                isAnimated={true}\r\n\r\n                user={{\r\n                    _id: time,\r\n                }}\r\n                onPressAvatar={(user) => {\r\n                    setShowImage(user.avatar)\r\n                    setModalVisible(true)\r\n                }}\r\n                scrollToBottom={true}\r\n                renderSend={(props) => {\r\n                    return (\r\n                        <Send\r\n                            {...props}\r\n                            containerStyle={{\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                alignSelf: 'center',\r\n                                marginRight: 15,\r\n                            }}\r\n                        >\r\n                            <Image source={require('../assets/send.png')}\r\n                                style={{ width: 27.2, height: 27.2 }} />\r\n                        </Send>\r\n                    );\r\n                }}\r\n            />\r\n            <Modal\r\n                style={{\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center'\r\n                }}\r\n                animationIn='slideInUp'\r\n                coverScreen={true}\r\n                animationInTiming={2000}\r\n                backdropOpacity={0.5}\r\n                onBackdropPress={() => setModalVisible(false)}\r\n                onSwipeComplete={() => setModalVisible(false)}\r\n                onBackButtonPress={() => {\r\n                    setModalVisible(false)\r\n                }}\r\n                isVisible={isModalVisible}>\r\n                <TouchableOpacity\r\n                    onPress={downloadImage}\r\n\r\n                >\r\n                    <Image\r\n                        source={{ uri: showImage }}\r\n                        style={{ width: 120, height: 120 }}\r\n                    />\r\n                </TouchableOpacity>\r\n\r\n            </Modal>\r\n        </View>\r\n\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}